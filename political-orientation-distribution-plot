data_polID = 
  data %>% 
  filter(!is.na(PolID)) %>% 
  mutate(PolID = factor(PolID, labels=c('Extremely liberal', 'Liberal', 'Somewhat liberal', 'Moderate', 'Somewhat conservative', 'Conservative', 'Extremely Conservative'),
                        levels=c(1:7)), 
         exp = factor(exp, levels=rev(levels(factor(exp))))) %>% 
  group_by(exp, PolID) %>% 
  summarise(count=n()) %>% 
  mutate(percent = ifelse(row_number()==4, NA,100*round(count/sum(count), 3)), 
         n = sum(count)/500) %>% 
  slice(1:3, rep(4, each = 2), 5:7) %>%   
  mutate(count_plot = ifelse(row_number()==4|row_number()==5, count/2, count)) %>% 
  mutate(percent_plot = ifelse(row_number()<5, -100*round(count_plot/sum(count_plot), 3), 100*round(count_plot/sum(count_plot), 3))) 

polID_low = slice(data_polID, 1:4)
polID_high = slice(data_polID, 5:8) %>% 
  mutate(PolID= factor(PolID, levels = rev(levels(factor(PolID)))))

polID_moderatetext = data_polID %>% 
  slice(., -4) %>% 
  mutate(percent= 100*round(count/sum(count), 3)) %>% 
           slice(., 4)
  
colors = rev(brewer.pal(7, "RdBu")) %>% recode("#F7F7F7" = '#BABABA')

ggplot()+
  geom_bar(stat='identity', data=polID_low, aes(y = exp, x = percent_plot, fill=PolID, width=n))+
  geom_bar(stat='identity', data=polID_high, aes(y = exp, x = percent_plot, width=n, fill=PolID))+
  geom_text(data=polID_low, aes(y = exp, x = percent_plot, label=percent, group=PolID), color='white', position=position_stack(vjust=0.5), fontface='italic')+
geom_text(data=polID_high, aes(y = exp, x = percent_plot, label=percent, group=PolID), color='white', position=position_stack(vjust=.5), fontface='italic')+
  geom_text(data=polID_moderatetext, aes(y = exp, x = 0, label=percent), color='white', fontface='italic')+
theme_pubclean()+
  scale_fill_manual(values=colors, breaks = levels(factor(metaDat_polID$PolID)))+
  xlim(c(-100, 100))+
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        legend.position = 'top',
        axis.text.y = element_text(size=15))+
  guides(fill = guide_legend(nrow=1, title=''))

